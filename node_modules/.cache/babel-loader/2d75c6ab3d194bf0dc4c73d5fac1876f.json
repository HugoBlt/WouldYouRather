{"ast":null,"code":"var _jsxFileName = \"/Users/Hugo/Desktop/React/WouldYouRather/src/components/QuestionPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { formatDate } from '../utils/helpers';\nimport { handleResponse } from '../actions/shared';\n\nclass QuestionPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: '',\n      showResult: false\n    };\n\n    this.optionSelected = e => {\n      this.setState({\n        selectedOption: e.target.id\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        dispatch,\n        question,\n        authedUser\n      } = this.props;\n      const answer = this.state.selectedOption;\n      this.setState({\n        showResult: true\n      });\n      dispatch(handleResponse({\n        authedUser,\n        qid: question.id,\n        answer\n      }));\n    };\n  }\n\n  render() {\n    const {\n      question,\n      user\n    } = this.props;\n\n    if (question === null) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, \"Error 404 : This Question doesn't exist ! Why not created it ?\");\n    }\n\n    const {\n      author,\n      timestamp\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = user;\n    const totalAnswer = question.optionOne.votes.length + question.optionTwo.votes.length;\n    const ratioAnswer = 100 * question.optionOne.votes.length / totalAnswer;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \" Would You Rather ? \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../utils/avatars/${avatarURL}`),\n      alt: `Avatar of ${author}`,\n      className: \"avatar-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, `${name} asks :`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, formatDate(timestamp))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-choice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: question.optionOne.text,\n      name: \"answer\",\n      id: \"optionOne\",\n      onChange: this.optionSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: question.optionTwo.text,\n      name: \"answer\",\n      id: \"optionTwo\",\n      onChange: this.optionSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn\",\n      disabled: this.state.selectedOption === '',\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Submit\"))))), this.state.showResult === true ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \" Other's Response \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, `${ratioAnswer}%`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, `${question.optionOne.text}`)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, `${100 - ratioAnswer}%`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, `${question.optionTwo.text}`))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, `Total Answer : ${totalAnswer}`))) : null);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}, props) {\n  const {\n    id\n  } = props.match.params;\n  const alreadyAnswer = Object.keys(users[authedUser].answers).includes(id);\n  return {\n    question: questions[id] ? questions[id] : null,\n    user: questions[id] ? users[questions[id].author] : null,\n    authedUser,\n    alreadyAnswer: false\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionPage);","map":{"version":3,"sources":["/Users/Hugo/Desktop/React/WouldYouRather/src/components/QuestionPage.js"],"names":["React","Component","connect","Form","Col","Button","formatDate","handleResponse","QuestionPage","state","selectedOption","showResult","optionSelected","e","setState","target","id","handleSubmit","preventDefault","dispatch","question","authedUser","props","answer","qid","render","user","author","timestamp","name","avatarURL","totalAnswer","optionOne","votes","length","optionTwo","ratioAnswer","require","text","mapStateToProps","users","questions","match","params","alreadyAnswer","Object","keys","answers","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { formatDate } from '../utils/helpers'\nimport { handleResponse } from '../actions/shared'\n\n\nclass QuestionPage extends Component {\n  state = {\n    selectedOption: '',\n    showResult: false,\n  }\n  optionSelected = (e) => {\n    this.setState({\n      selectedOption: e.target.id\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    const { dispatch, question, authedUser } = this.props\n    const answer = this.state.selectedOption\n\n    this.setState({\n      showResult: true,\n    })\n    dispatch(handleResponse({\n      authedUser,\n      qid : question.id,\n      answer,\n    }))\n  }\n  render () {\n    const { question, user } = this.props\n    \n    if (question === null) {\n      return (<p className = 'center'>Error 404 : This Question doesn't exist ! Why not created it ?</p>)\n    }\n    \n    const { author, timestamp } = question\n    const { name, avatarURL } = user\n    const totalAnswer = question.optionOne.votes.length + question.optionTwo.votes.length\n    const ratioAnswer = 100 * question.optionOne.votes.length / totalAnswer\n    \n\n    return (\n      <div>\n        <h2 className='center'> Would You Rather ? </h2>\n        <div className='question'>\n          <img\n            src={require(`../utils/avatars/${avatarURL}`)}\n            alt={`Avatar of ${author}`}\n            className='avatar-details'\n          />\n          <div>\n            <div className='question-info'>\n                <span>{`${name} asks :`}</span>\n                <div>{formatDate(timestamp)}</div>\n            </div>\n            <div className='question-choice'>\n            <Form>\n                <Form.Group>\n                  <Col sm={12}>\n                    <Form.Check\n                      type=\"radio\"\n                      label={question.optionOne.text}\n                      name=\"answer\"\n                      id=\"optionOne\"\n                      onChange={this.optionSelected}\n                    />\n                    <Form.Check\n                      type=\"radio\"\n                      label={question.optionTwo.text}\n                      name=\"answer\"\n                      id=\"optionTwo\"\n                      onChange={this.optionSelected}\n                    />\n                  </Col>\n                </Form.Group>\n                <Button className='btn' disabled = {this.state.selectedOption === ''} onClick={this.handleSubmit}>\n                  Submit\n                </Button>\n              </Form>\n            </div>\n          </div>\n        </div>\n        {this.state.showResult === true\n          ?\n          <div className='center'> \n            <h4> Other's Response </h4>\n            <div className='answer'>\n              <div className='row'>\n                <div className = 'column'>\n                  <div className='score'>{`${ratioAnswer}%`}</div>\n                  <div>{`${question.optionOne.text}`}</div>\n                </div>\n                <div className = 'column'>\n                  <div className='score'>{`${100 - ratioAnswer}%`}</div>\n                  <div>{`${question.optionTwo.text}`}</div>\n                </div>\n              </div>\n              <div>{`Total Answer : ${totalAnswer}`}</div>\n            </div>\n          </div>\n          : null\n          }\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps ({authedUser, users, questions}, props) {\n  const { id } = props.match.params\n  const alreadyAnswer = Object.keys(users[authedUser].answers).includes(id)\n\n  return {\n    question: questions[id]\n    ? questions[id]\n    : null,\n    user : questions[id]\n    ? users[questions[id].author]\n    : null,\n    authedUser,\n    alreadyAnswer : false,\n  }\n}\n\nexport default connect(mapStateToProps)(QuestionPage)\n"]},"metadata":{},"sourceType":"module"}