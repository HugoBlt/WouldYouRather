{"ast":null,"code":"var _jsxFileName = \"/Users/Hugo/Desktop/React/WouldYouRather/src/components/Score.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Score extends Component {\n  render() {\n    const {\n      user,\n      users\n    } = this.props;\n    const {\n      id,\n      name,\n      avatarURL\n    } = user;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../utils/avatars/${avatarURL}`),\n      alt: `Avatar of ${id}`,\n      className: \"avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }\n    }, `${name} score :`)))));\n  }\n\n}\n\nfunction mapStateToProps({\n  users\n}, {\n  id\n}) {\n  const question = questions[id];\n  const user = users[id];\n  return {\n    user,\n    users\n  };\n}\n\nexport default connect(mapStateToProps)(Score);","map":{"version":3,"sources":["/Users/Hugo/Desktop/React/WouldYouRather/src/components/Score.js"],"names":["React","Component","connect","Score","render","user","users","props","id","name","avatarURL","require","mapStateToProps","question","questions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC5BG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkB,KAAKC,KAA7B;AACA,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,QAA0BL,IAAhC;AACA,wBACE;AAAK,MAAA,SAAS,EAAG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAEM,OAAO,CAAE,oBAAmBD,SAAU,EAA/B,CADd;AAEE,MAAA,GAAG,EAAG,aAAYF,EAAG,EAFvB;AAGE,MAAA,SAAS,EAAC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,GAAEC,IAAK,UAAf,CADF,CADF,CANF,CADF,CADF;AAgBD;;AApB2B;;AAuB9B,SAASG,eAAT,CAA0B;AAACN,EAAAA;AAAD,CAA1B,EAAmC;AAAEE,EAAAA;AAAF,CAAnC,EAA2C;AACzC,QAAMK,QAAQ,GAAGC,SAAS,CAACN,EAAD,CAA1B;AACA,QAAMH,IAAI,GAAGC,KAAK,CAACE,EAAD,CAAlB;AAEA,SAAO;AACLH,IAAAA,IADK;AAELC,IAAAA;AAFK,GAAP;AAID;;AAED,eAAeJ,OAAO,CAACU,eAAD,CAAP,CAAyBT,KAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass Score extends Component {\n  render() {\n    const { user, users } = this.props\n    const { id, name, avatarURL } = user\n    return (\n      <div className = 'center'>\n        <div className='question'>\n          <img\n            src={require(`../utils/avatars/${avatarURL}`)}\n            alt={`Avatar of ${id}`}\n            className='avatar'\n          />\n          <div className='question-info'>\n            <div>\n              <span>{`${name} score :`}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps ({users}, { id }) {\n  const question = questions[id]\n  const user = users[id]\n\n  return {\n    user,\n    users,\n  }\n}\n\nexport default connect(mapStateToProps)(Score)\n"]},"metadata":{},"sourceType":"module"}