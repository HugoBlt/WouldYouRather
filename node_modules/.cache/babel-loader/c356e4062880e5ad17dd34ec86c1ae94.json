{"ast":null,"code":"var _jsxFileName = \"/Users/Hugo/Desktop/React/WouldYouRather/src/components/QuestionPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { formatDate } from '../utils/helpers';\n\nclass QuestionPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: '',\n      showResult: false\n    };\n\n    this.optionSelected = e => {\n      this.setState({\n        selectedOption: e.target.id\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        showResult: true\n      }); // const { dispatch, question, authedUser } = this.props\n      // const { answer } = this.state.selectedOption\n      // dispatch(handleToggleTweet({\n      //   id: question.id,\n      //   answer,\n      //   authedUser\n      // }))\n    };\n  }\n\n  render() {\n    const {\n      question,\n      user,\n      authedUser\n    } = this.props;\n    const {\n      author,\n      timestamp\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = user;\n    const numberOptionOne = question.optionOne.votes.length;\n    const numberOptionTwo = question.optionTwo.votes.length;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \" Would You Rather ? \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../utils/avatars/${avatarURL}`),\n      alt: `Avatar of ${author}`,\n      className: \"avatar-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, `${name} asks :`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, formatDate(timestamp))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-choice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: question.optionOne.text,\n      name: \"answer\",\n      id: \"optionOne\",\n      onChange: this.optionSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: question.optionTwo.text,\n      name: \"answer\",\n      id: \"optionTwo\",\n      onChange: this.optionSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, this.state.selectedOption), /*#__PURE__*/React.createElement(Button, {\n      disabled: this.state.selectedOption === '',\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Submit\"), this.state.showResult === true ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, `${question.optionOne.text} : ${question.optionOne.votes.length} / ${question.optionTwo.votes.length + question.optionOne.votes.length}`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, `${question.optionTwo.text} : ${question.optionTwo.votes.length}/ ${question.optionTwo.votes.length + question.optionOne.votes.length}`)) : null)))));\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}, {\n  id\n}) {\n  const question = questions[id];\n  const user = users[question.author];\n  return {\n    question,\n    user,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionPage);","map":{"version":3,"sources":["/Users/Hugo/Desktop/React/WouldYouRather/src/components/QuestionPage.js"],"names":["React","Component","connect","Form","Col","Button","formatDate","QuestionPage","state","selectedOption","showResult","optionSelected","e","setState","target","id","handleSubmit","preventDefault","render","question","user","authedUser","props","author","timestamp","name","avatarURL","numberOptionOne","optionOne","votes","length","numberOptionTwo","optionTwo","require","text","mapStateToProps","users","questions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { formatDate } from '../utils/helpers'\n\n\nclass QuestionPage extends Component {\n  state = {\n    selectedOption: '',\n    showResult: false\n  }\n  optionSelected = (e) => {\n    this.setState({\n      selectedOption: e.target.id\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    this.setState({\n      showResult: true\n    })\n    // const { dispatch, question, authedUser } = this.props\n    // const { answer } = this.state.selectedOption\n\n\n    // dispatch(handleToggleTweet({\n    //   id: question.id,\n    //   answer,\n    //   authedUser\n    // }))\n  }\n  render () {\n    const { question, user, authedUser } = this.props\n    const { author, timestamp } = question\n    const { name, avatarURL } = user\n\n    const numberOptionOne = question.optionOne.votes.length\n    const numberOptionTwo = question.optionTwo.votes.length\n\n    return (\n      <div>\n        <h2 className='center'> Would You Rather ? </h2>\n        <div className='question'>\n          <img\n            src={require(`../utils/avatars/${avatarURL}`)}\n            alt={`Avatar of ${author}`}\n            className='avatar-details'\n          />\n          <div>\n            <div className='question-info'>\n                <span>{`${name} asks :`}</span>\n                <div>{formatDate(timestamp)}</div>\n            </div>\n            <div className='question-choice'>\n            <Form>\n                <Form.Group>\n                  <Col sm={12}>\n                    <Form.Check\n                      type=\"radio\"\n                      label={question.optionOne.text}\n                      name=\"answer\"\n                      id=\"optionOne\"\n                      onChange={this.optionSelected}\n                    />\n                    <Form.Check\n                      type=\"radio\"\n                      label={question.optionTwo.text}\n                      name=\"answer\"\n                      id=\"optionTwo\"\n                      onChange={this.optionSelected}\n                    />\n                  </Col>\n                </Form.Group>\n                <p>{this.state.selectedOption}</p>\n                <Button disabled = {this.state.selectedOption === ''} onClick={this.handleSubmit}>\n                  Submit\n                </Button>\n                {this.state.showResult === true\n                ? <div>\n                    <div>{`${question.optionOne.text} : ${question.optionOne.votes.length} / ${question.optionTwo.votes.length + question.optionOne.votes.length}`}</div>\n                    <div>{`${question.optionTwo.text} : ${question.optionTwo.votes.length}/ ${question.optionTwo.votes.length + question.optionOne.votes.length}`}</div>\n                  </div>\n                : null\n                }\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps ({authedUser, users, questions}, { id }) {\n  const question = questions[id]\n  const user = users[question.author]\n\n  return {\n    question,\n    user,\n    authedUser,\n  }\n}\n\nexport default connect(mapStateToProps)(QuestionPage)\n"]},"metadata":{},"sourceType":"module"}