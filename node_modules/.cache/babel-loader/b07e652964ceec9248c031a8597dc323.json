{"ast":null,"code":"import { saveQuestionAnswer } from '../utils/api';\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const ADD_RESPONSE = 'ADD_RESPONSE';\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\n\nfunction addResponse(authedUser, qid, answer) {\n  return {\n    type: ADD_RESPONSE,\n    authedUser,\n    qid,\n    answer\n  };\n}\n\nexport function handleResponse(qid) {\n  return dispatch => {\n    const {\n      authedUser\n    } = getState();\n    dispatch(showLoading());\n    return saveQuestionAnswer({\n      authedUser,\n      qid,\n      answer\n    }).then(tweet => dispatch(addResponse(authedUser, qid, answer))).then(() => dispatch(hideLoading()));\n  };\n}","map":{"version":3,"sources":["/Users/Hugo/Desktop/React/WouldYouRather/src/actions/questions.js"],"names":["saveQuestionAnswer","RECEIVE_QUESTIONS","ADD_RESPONSE","receiveQuestions","questions","type","addResponse","authedUser","qid","answer","handleResponse","dispatch","getState","showLoading","then","tweet","hideLoading"],"mappings":"AACA,SAASA,kBAAT,QAAmC,cAAnC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,SAASC,gBAAT,CAA2BC,SAA3B,EAAsC;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAEJ,iBADD;AAELG,IAAAA;AAFK,GAAP;AAID;;AAED,SAASE,WAAT,CAAsBC,UAAtB,EAAkCC,GAAlC,EAAuCC,MAAvC,EAA+C;AAC7C,SAAO;AACLJ,IAAAA,IAAI,EAAEH,YADD;AAELK,IAAAA,UAFK;AAGLC,IAAAA,GAHK;AAILC,IAAAA;AAJK,GAAP;AAMD;;AAED,OAAO,SAASC,cAAT,CAAyBF,GAAzB,EAA8B;AACnC,SAAQG,QAAD,IAAc;AACnB,UAAM;AAAEJ,MAAAA;AAAF,QAAiBK,QAAQ,EAA/B;AAEAD,IAAAA,QAAQ,CAACE,WAAW,EAAZ,CAAR;AAEA,WAAOb,kBAAkB,CAAC;AACxBO,MAAAA,UADwB;AAExBC,MAAAA,GAFwB;AAGxBC,MAAAA;AAHwB,KAAD,CAAlB,CAKJK,IALI,CAKEC,KAAD,IAAWJ,QAAQ,CAACL,WAAW,CAACC,UAAD,EAAaC,GAAb,EAAkBC,MAAlB,CAAZ,CALpB,EAMJK,IANI,CAMC,MAAMH,QAAQ,CAACK,WAAW,EAAZ,CANf,CAAP;AAOD,GAZD;AAaD","sourcesContent":["\nimport { saveQuestionAnswer } from '../utils/api'\n\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\nexport const ADD_RESPONSE = 'ADD_RESPONSE'\n\nexport function receiveQuestions (questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions,\n  }\n}\n\nfunction addResponse (authedUser, qid, answer) {\n  return {\n    type: ADD_RESPONSE,\n    authedUser,\n    qid,\n    answer,\n  }\n}\n\nexport function handleResponse (qid) {\n  return (dispatch) => {\n    const { authedUser } = getState()\n\n    dispatch(showLoading())\n\n    return saveQuestionAnswer({\n      authedUser,\n      qid,\n      answer\n    })\n      .then((tweet) => dispatch(addResponse(authedUser, qid, answer)))\n      .then(() => dispatch(hideLoading()))\n  }\n}"]},"metadata":{},"sourceType":"module"}