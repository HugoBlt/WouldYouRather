{"ast":null,"code":"import { RECEIVE_QUESTIONS, ADD_RESPONSE, ADD_QUESTION } from '../actions/questions';\nexport default function questions(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return { ...state,\n        ...action.questions\n      };\n\n    case ADD_RESPONSE:\n      const {\n        authedUser,\n        qid,\n        answer\n      } = action;\n      return { ...state,\n        [qid]: { ...state[qid],\n          [answer]: { ...state[qid][answer],\n            votes: state[qid][answer].votes.concat([authedUser])\n          }\n        }\n      };\n\n    case ADD_QUESTION:\n      const {\n        question\n      } = action;\n      return { ...state,\n        [question.id]: question\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/Hugo/Desktop/React/WouldYouRather/src/reducers/questions.js"],"names":["RECEIVE_QUESTIONS","ADD_RESPONSE","ADD_QUESTION","questions","state","action","type","authedUser","qid","answer","votes","concat","question","id"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,YAA5B,EAA0CC,YAA1C,QAA8D,sBAA9D;AAEA,eAAe,SAASC,SAAT,CAAoBC,KAAK,GAAG,EAA5B,EAAgCC,MAAhC,EAAwC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKN,iBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAEL,WAAGC,MAAM,CAACF;AAFL,OAAP;;AAIF,SAAKF,YAAL;AACA,YAAM;AAAEM,QAAAA,UAAF;AAAcC,QAAAA,GAAd;AAAmBC,QAAAA;AAAnB,UAA8BJ,MAApC;AACC,aAAO,EACL,GAAGD,KADE;AAEL,SAACI,GAAD,GAAQ,EACN,GAAGJ,KAAK,CAACI,GAAD,CADF;AAEN,WAACC,MAAD,GAAW,EACT,GAAGL,KAAK,CAACI,GAAD,CAAL,CAAWC,MAAX,CADM;AAETC,YAAAA,KAAK,EAAEN,KAAK,CAACI,GAAD,CAAL,CAAWC,MAAX,EAAmBC,KAAnB,CAAyBC,MAAzB,CAAgC,CAACJ,UAAD,CAAhC;AAFE;AAFL;AAFH,OAAP;;AAUD,SAAKL,YAAL;AACA,YAAM;AAAEU,QAAAA;AAAF,UAAeP,MAArB;AACE,aAAO,EACL,GAAGD,KADE;AAEL,SAACQ,QAAQ,CAACC,EAAV,GAAeD;AAFV,OAAP;;AAIF;AACE,aAAOR,KAAP;AAzBJ;AA2BD","sourcesContent":["import { RECEIVE_QUESTIONS, ADD_RESPONSE, ADD_QUESTION } from '../actions/questions'\n\nexport default function questions (state = {}, action) {\n  switch(action.type) {\n    case RECEIVE_QUESTIONS : \n      return {\n        ...state,\n        ...action.questions,\n      }\n    case ADD_RESPONSE : \n    const { authedUser, qid, answer } = action\n     return {\n       ...state,\n       [qid] : {\n         ...state[qid],\n         [answer] : {\n           ...state[qid][answer],\n           votes: state[qid][answer].votes.concat([authedUser])\n         }         \n       }\n     }\n    case ADD_QUESTION:\n    const { question } = action;\n      return {\n        ...state,\n        [question.id]: question,\n      };\n    default : \n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}