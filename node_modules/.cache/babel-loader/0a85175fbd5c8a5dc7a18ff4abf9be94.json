{"ast":null,"code":"var _jsxFileName = \"/Users/Hugo/Desktop/React/WouldYouRather/src/components/QuestionPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { formatDate } from '../utils/helpers';\n\nclass QuestionPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: ''\n    };\n\n    this.optionSelected = e => {\n      this.setState({\n        selectedOption: e.target.id\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        dispatch,\n        question,\n        authedUser\n      } = this.props;\n      dispatch(handleToggleTweet({\n        id: tweet.id,\n        hasLiked: tweet.hasLiked,\n        authedUser\n      }));\n    };\n  }\n\n  render() {\n    const {\n      question,\n      user,\n      authedUser\n    } = this.props;\n    const {\n      author,\n      timestamp\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = user;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \" Would You Rather ? \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../utils/avatars/${avatarURL}`),\n      alt: `Avatar of ${author}`,\n      className: \"avatar-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, `${name} asks :`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, formatDate(timestamp))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-choice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: question.optionOne.text,\n      name: \"answer\",\n      id: \"optionOne\",\n      onChange: this.optionSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: question.optionTwo.text,\n      name: \"answer\",\n      id: \"optionTwo\",\n      onChange: this.optionSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, this.state.selectedOption), /*#__PURE__*/React.createElement(Button, {\n      disabled: this.state.selectedOption === '',\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Submit\"))))));\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}, {\n  id\n}) {\n  const question = questions[id];\n  const user = users[question.author];\n  return {\n    question,\n    user,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionPage);","map":{"version":3,"sources":["/Users/Hugo/Desktop/React/WouldYouRather/src/components/QuestionPage.js"],"names":["React","Component","connect","Form","Col","Button","formatDate","QuestionPage","state","selectedOption","optionSelected","e","setState","target","id","handleSubmit","preventDefault","dispatch","question","authedUser","props","handleToggleTweet","tweet","hasLiked","render","user","author","timestamp","name","avatarURL","require","optionOne","text","optionTwo","mapStateToProps","users","questions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { formatDate } from '../utils/helpers'\n\n\nclass QuestionPage extends Component {\n  state = {\n    selectedOption: ''\n  }\n  optionSelected = (e) => {\n    this.setState({\n      selectedOption: e.target.id\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { dispatch, question, authedUser } = this.props\n\n    dispatch(handleToggleTweet({\n      id: tweet.id,\n      hasLiked: tweet.hasLiked,\n      authedUser\n    }))\n  }\n  render () {\n    const { question, user, authedUser } = this.props\n    const { author, timestamp } = question\n    const { name, avatarURL } = user\n    return (\n      <div>\n        <h2 className='center'> Would You Rather ? </h2>\n        <div className='question'>\n          <img\n            src={require(`../utils/avatars/${avatarURL}`)}\n            alt={`Avatar of ${author}`}\n            className='avatar-details'\n          />\n          <div>\n            <div className='question-info'>\n                <span>{`${name} asks :`}</span>\n                <div>{formatDate(timestamp)}</div>\n            </div>\n            <div className='question-choice'>\n            <Form>\n                <Form.Group>\n                  <Col sm={12}>\n                    <Form.Check\n                      type=\"radio\"\n                      label={question.optionOne.text}\n                      name=\"answer\"\n                      id=\"optionOne\"\n                      onChange={this.optionSelected}\n                    />\n                    <Form.Check\n                      type=\"radio\"\n                      label={question.optionTwo.text}\n                      name=\"answer\"\n                      id=\"optionTwo\"\n                      onChange={this.optionSelected}\n                    />\n                  </Col>\n                </Form.Group>\n                <p>{this.state.selectedOption}</p>\n                <Button disabled = {this.state.selectedOption === ''} onClick={this.handleSubmit}>\n                  Submit\n                </Button>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps ({authedUser, users, questions}, { id }) {\n  const question = questions[id]\n  const user = users[question.author]\n\n  return {\n    question,\n    user,\n    authedUser,\n  }\n}\n\nexport default connect(mapStateToProps)(QuestionPage)\n"]},"metadata":{},"sourceType":"module"}