{"ast":null,"code":"var _jsxFileName = \"/Users/Hugo/Desktop/React/WouldYouRather/src/components/Dashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Question from './Question';\n\nclass Dashboard extends Component {\n  render() {\n    const {\n      remaningQuestions,\n      answeredQuestions,\n      user\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, \" Would You Rather ? \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"home-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, remaningQuestions.map(id => /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Question, {\n      id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inter-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"home-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, answeredQuestions.map(id => /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Question, {\n      id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}) {\n  const user = users[authedUser];\n  const answeredQuestions = Object.keys(user.answers);\n  return {\n    remaningQuestions: Object.keys(questions).filter(id => !answeredQuestions.includes(id)).sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n    answeredQuestions: answeredQuestions.sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n    user\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Users/Hugo/Desktop/React/WouldYouRather/src/components/Dashboard.js"],"names":["React","Component","connect","Question","Dashboard","render","remaningQuestions","answeredQuestions","user","props","map","id","mapStateToProps","authedUser","users","questions","Object","keys","answers","filter","includes","sort","a","b","timestamp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,iBAAD;AAAoBC,MAAAA,iBAApB;AAAuCC,MAAAA;AAAvC,QAAgD,KAAKC,KAA3D;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,iBAAiB,CAACI,GAAlB,CAAuBC,EAAD,iBACrB;AAAI,MAAA,GAAG,EAAIA,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAIA,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,CADF,CADF,eAUE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,eAWE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,iBAAiB,CAACG,GAAlB,CAAuBC,EAAD,iBACrB;AAAI,MAAA,GAAG,EAAIA,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAIA,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,CADF,CAXF,CAFF,CADF;AA0BD;;AA7B+B;;AAgClC,SAASC,eAAT,CAA0B;AAACC,EAAAA,UAAD;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAA1B,EAA0D;AACxD,QAAMP,IAAI,GAAGM,KAAK,CAACD,UAAD,CAAlB;AACA,QAAMN,iBAAiB,GAAGS,MAAM,CAACC,IAAP,CAAYT,IAAI,CAACU,OAAjB,CAA1B;AAEA,SAAO;AACLZ,IAAAA,iBAAiB,EAAEU,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBI,MAAvB,CAA8BR,EAAE,IAAI,CAACJ,iBAAiB,CAACa,QAAlB,CAA2BT,EAA3B,CAArC,EAChBU,IADgB,CACX,CAACC,CAAD,EAAIC,CAAJ,KAAUR,SAAS,CAACQ,CAAD,CAAT,CAAaC,SAAb,GAAyBT,SAAS,CAACO,CAAD,CAAT,CAAaE,SADrC,CADd;AAGLjB,IAAAA,iBAAiB,EAAGA,iBAAiB,CAClCc,IADiB,CACZ,CAACC,CAAD,EAAIC,CAAJ,KAAUR,SAAS,CAACQ,CAAD,CAAT,CAAaC,SAAb,GAAyBT,SAAS,CAACO,CAAD,CAAT,CAAaE,SADpC,CAHf;AAKLhB,IAAAA;AALK,GAAP;AAOD;;AAED,eAAeN,OAAO,CAACU,eAAD,CAAP,CAAyBR,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Question from './Question'\n\nclass Dashboard extends Component {\n  render() {\n    const {remaningQuestions, answeredQuestions, user } = this.props\n    return (\n      <div>\n        <h3 className='center'> Would You Rather ? </h3>\n        <div className='row'> \n          <div class=\"column\"> \n            <ul className='home-list'>\n              {remaningQuestions.map((id) => (\n                <li key = {id}>\n                  <Question id = {id}/>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className='inter-column'/>\n          <div class=\"column\"> \n            <ul className='home-list'>\n              {answeredQuestions.map((id) => (\n                <li key = {id}>\n                  <Question id = {id}/>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps ({authedUser, users, questions}) {\n  const user = users[authedUser] \n  const answeredQuestions = Object.keys(user.answers)\n\n  return {\n    remaningQuestions: Object.keys(questions).filter(id => !answeredQuestions.includes(id))\n      .sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n    answeredQuestions : answeredQuestions\n      .sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n    user\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}