{"ast":null,"code":"var _jsxFileName = \"/Users/Hugo/Desktop/React/WouldYouRather/src/components/Question.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { formatDate } from '../utils/helpers';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass Question extends Component {\n  render() {\n    const {\n      question,\n      user,\n      answer\n    } = this.props;\n    const {\n      author,\n      timestamp,\n      id\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = user;\n\n    if (question === null) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 14\n        }\n      }, \"This Tweet doesn't existd\");\n    }\n\n    return /*#__PURE__*/React.createElement(Link, {\n      to: `/question/${id}`,\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../utils/avatars/${avatarURL}`),\n      alt: `Avatar of ${author}`,\n      className: \"avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, `${name} asks :`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, formatDate(timestamp)), answer !== null ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 32\n      }\n    }, `You prefers: ${answer}`) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 68\n      }\n    }, \"Click to answer\"))));\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}, {\n  props\n}) {\n  const id = props.match.params;\n  const question = questions[id];\n  const user = users[question.author];\n  return {\n    question,\n    user,\n    answer: users[authedUser].answers[id] ? question[users[authedUser].answers[id]].text : null\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Question));","map":{"version":3,"sources":["/Users/Hugo/Desktop/React/WouldYouRather/src/components/Question.js"],"names":["React","Component","connect","formatDate","Link","withRouter","Question","render","question","user","answer","props","author","timestamp","id","name","avatarURL","require","mapStateToProps","authedUser","users","questions","match","params","answers","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA;AAAlB,QAA6B,KAAKC,KAAxC;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,SAAV;AAAqBC,MAAAA;AAArB,QAA4BN,QAAlC;AACA,UAAM;AAAEO,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAsBP,IAA5B;;AAEA,QAAID,QAAQ,KAAK,IAAjB,EAAuB;AACrB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP;AACD;;AAED,wBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,aAAYM,EAAG,EAA1B;AAA6B,MAAA,SAAS,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAEG,OAAO,CAAE,oBAAmBD,SAAU,EAA/B,CADd;AAEE,MAAA,GAAG,EAAG,aAAYJ,MAAO,EAF3B;AAGE,MAAA,SAAS,EAAC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,GAAEG,IAAK,SAAf,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMZ,UAAU,CAACU,SAAD,CAAhB,CAFF,EAGGH,MAAM,KAAK,IAAX,gBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,gBAAeA,MAAO,EAA3B,CAAlB,gBAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHzD,CADF,CANF,CADF;AAgBD;;AA1B8B;;AA6BjC,SAASQ,eAAT,CAA0B;AAACC,EAAAA,UAAD;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAA1B,EAA0D;AAAEV,EAAAA;AAAF,CAA1D,EAAqE;AACnE,QAAMG,EAAE,GAAGH,KAAK,CAACW,KAAN,CAAYC,MAAvB;AACA,QAAMf,QAAQ,GAAGa,SAAS,CAACP,EAAD,CAA1B;AACA,QAAML,IAAI,GAAGW,KAAK,CAACZ,QAAQ,CAACI,MAAV,CAAlB;AAEA,SAAO;AACLJ,IAAAA,QADK;AAELC,IAAAA,IAFK;AAGLC,IAAAA,MAAM,EAAGU,KAAK,CAACD,UAAD,CAAL,CAAkBK,OAAlB,CAA0BV,EAA1B,IACPN,QAAQ,CAACY,KAAK,CAACD,UAAD,CAAL,CAAkBK,OAAlB,CAA0BV,EAA1B,CAAD,CAAR,CAAwCW,IADjC,GAEP;AALG,GAAP;AAOD;;AAED,eAAepB,UAAU,CAACH,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,QAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatDate } from '../utils/helpers'\nimport { Link, withRouter } from 'react-router-dom'\n\nclass Question extends Component {\n  render() {\n    const { question, user, answer } = this.props\n    const { author, timestamp, id } = question\n    const { name, avatarURL } = user\n\n    if (question === null) {\n      return <p>This Tweet doesn't existd</p>\n    }\n\n    return (\n      <Link to={`/question/${id}`} className='question'>\n        <img\n          src={require(`../utils/avatars/${avatarURL}`)}\n          alt={`Avatar of ${author}`}\n          className='avatar'\n        />\n        <div className='question-info'>\n          <div>\n            <span>{`${name} asks :`}</span>\n            <div>{formatDate(timestamp)}</div>\n            {answer !== null ? <p>{`You prefers: ${answer}`}</p> : <p>Click to answer</p>}\n          </div>\n        </div>\n      </Link>\n    )\n  }\n}\n\nfunction mapStateToProps ({authedUser, users, questions}, { props }) {\n  const id = props.match.params\n  const question = questions[id]\n  const user = users[question.author]\n\n  return {\n    question,\n    user,\n    answer : users[authedUser].answers[id]\n    ? question[users[authedUser].answers[id]].text\n    : null,\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Question))\n"]},"metadata":{},"sourceType":"module"}