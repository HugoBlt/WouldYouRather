{"ast":null,"code":"var _jsxFileName = \"/Users/Hugo/Desktop/React/WouldYouRather/src/components/QuestionPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { formatDate } from '../utils/helpers';\n\nclass QuestionPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: ''\n    };\n  }\n\n  render() {\n    const {\n      question,\n      user,\n      authedUser\n    } = this.props;\n    const {\n      author,\n      timestamp\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = user;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, \" Would You Rather ? \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../utils/avatars/${avatarURL}`),\n      alt: `Avatar of ${author}`,\n      className: \"avatar-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, `${name} asks :`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, formatDate(timestamp))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-choice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}, {\n  id\n}) {\n  const question = questions[id];\n  const user = users[question.author];\n  return {\n    question,\n    user,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionPage);","map":{"version":3,"sources":["/Users/Hugo/Desktop/React/WouldYouRather/src/components/QuestionPage.js"],"names":["React","Component","connect","Form","Col","Button","formatDate","QuestionPage","state","selectedOption","render","question","user","authedUser","props","author","timestamp","name","avatarURL","require","mapStateToProps","users","questions","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,QAAkC,iBAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCO,KADmC,GAC3B;AACNC,MAAAA,cAAc,EAAE;AADV,KAD2B;AAAA;;AAInCC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA;AAAlB,QAAiC,KAAKC,KAA5C;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAwBL,QAA9B;AACA,UAAM;AAAEM,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAsBN,IAA5B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAEO,OAAO,CAAE,oBAAmBD,SAAU,EAA/B,CADd;AAEE,MAAA,GAAG,EAAG,aAAYH,MAAO,EAF3B;AAGE,MAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,GAAEE,IAAK,SAAf,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMX,UAAU,CAACU,SAAD,CAAhB,CAFJ,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CANF,CAFF,CADF;AAqBD;;AA7BkC;;AAgCrC,SAASI,eAAT,CAA0B;AAACP,EAAAA,UAAD;AAAaQ,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAA1B,EAA0D;AAAEC,EAAAA;AAAF,CAA1D,EAAkE;AAChE,QAAMZ,QAAQ,GAAGW,SAAS,CAACC,EAAD,CAA1B;AACA,QAAMX,IAAI,GAAGS,KAAK,CAACV,QAAQ,CAACI,MAAV,CAAlB;AAEA,SAAO;AACLJ,IAAAA,QADK;AAELC,IAAAA,IAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD;;AAED,eAAeX,OAAO,CAACkB,eAAD,CAAP,CAAyBb,YAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { formatDate } from '../utils/helpers'\n\n\nclass QuestionPage extends Component {\n  state = {\n    selectedOption: ''\n  }\n  render () {\n    const { question, user, authedUser } = this.props\n    const { author, timestamp } = question\n    const { name, avatarURL } = user\n    return (\n      <div>\n        <h2 className='center'> Would You Rather ? </h2>\n        <div className='question'>\n          <img\n            src={require(`../utils/avatars/${avatarURL}`)}\n            alt={`Avatar of ${author}`}\n            className='avatar-details'\n          />\n          <div>\n            <div className='question-info'>\n                <span>{`${name} asks :`}</span>\n                <div>{formatDate(timestamp)}</div>\n            </div>\n            <div className='question-choice'>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps ({authedUser, users, questions}, { id }) {\n  const question = questions[id]\n  const user = users[question.author]\n\n  return {\n    question,\n    user,\n    authedUser,\n  }\n}\n\nexport default connect(mapStateToProps)(QuestionPage)\n"]},"metadata":{},"sourceType":"module"}