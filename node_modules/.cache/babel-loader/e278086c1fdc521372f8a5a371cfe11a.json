{"ast":null,"code":"import { saveQuestionAnswer, saveQuestion } from '../utils/api';\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const ADD_RESPONSE = 'ADD_RESPONSE';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\n\nfunction addResponse({\n  authedUser,\n  qid,\n  answer\n}) {\n  return {\n    type: ADD_RESPONSE,\n    authedUser,\n    qid,\n    answer\n  };\n}\n\nfunction addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question\n  };\n}\n\nexport function handleResponse(info) {\n  return dispatch => {\n    dispatch(addResponse(info));\n    return saveQuestionAnswer(info).catch(e => {\n      console.warn('Error in addResponse:', e);\n      dispatch(addResponse(info));\n      alert('The was an error replying, please try again.');\n    });\n  };\n}\nexport function handleAddQuestion(question) {\n  return dispatch => {\n    dispatch(addQuestion(question));\n    return saveQuestion(question).then(tweet => dispatch(addTweet(tweet))).then(() => dispatch(hideLoading()));\n  };\n}\nexport function handleAddTweet(text, replyingTo) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    dispatch(showLoading());\n    return saveTweet({\n      text,\n      author: authedUser,\n      replyingTo\n    }).then(tweet => dispatch(addTweet(tweet))).then(() => dispatch(hideLoading()));\n  };\n}","map":{"version":3,"sources":["/Users/Hugo/Desktop/React/WouldYouRather/src/actions/questions.js"],"names":["saveQuestionAnswer","saveQuestion","RECEIVE_QUESTIONS","ADD_RESPONSE","ADD_QUESTION","receiveQuestions","questions","type","addResponse","authedUser","qid","answer","addQuestion","question","handleResponse","info","dispatch","catch","e","console","warn","alert","handleAddQuestion","then","tweet","addTweet","hideLoading","handleAddTweet","text","replyingTo","getState","showLoading","saveTweet","author"],"mappings":"AACA,SAASA,kBAAT,EAA6BC,YAA7B,QAAiD,cAAjD;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,SAASC,gBAAT,CAA2BC,SAA3B,EAAsC;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAEL,iBADD;AAELI,IAAAA;AAFK,GAAP;AAID;;AAED,SAASE,WAAT,CAAsB;AAACC,EAAAA,UAAD;AAAaC,EAAAA,GAAb;AAAkBC,EAAAA;AAAlB,CAAtB,EAAiD;AAC/C,SAAO;AACLJ,IAAAA,IAAI,EAAEJ,YADD;AAELM,IAAAA,UAFK;AAGLC,IAAAA,GAHK;AAILC,IAAAA;AAJK,GAAP;AAMD;;AAED,SAASC,WAAT,CAAsBC,QAAtB,EAAgC;AAC9B,SAAO;AACLN,IAAAA,IAAI,EAAEH,YADD;AAELS,IAAAA;AAFK,GAAP;AAID;;AAED,OAAO,SAASC,cAAT,CAAyBC,IAAzB,EAA+B;AACpC,SAAQC,QAAD,IAAc;AAEnBA,IAAAA,QAAQ,CAACR,WAAW,CAACO,IAAD,CAAZ,CAAR;AAEA,WAAOf,kBAAkB,CAACe,IAAD,CAAlB,CACJE,KADI,CACGC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb,EAAsCF,CAAtC;AACAF,MAAAA,QAAQ,CAACR,WAAW,CAACO,IAAD,CAAZ,CAAR;AACAM,MAAAA,KAAK,CAAC,8CAAD,CAAL;AACD,KALI,CAAP;AAMD,GAVD;AAWD;AAGD,OAAO,SAASC,iBAAT,CAA4BT,QAA5B,EAAsC;AAC3C,SAAQG,QAAD,IAAc;AAEnBA,IAAAA,QAAQ,CAACJ,WAAW,CAACC,QAAD,CAAZ,CAAR;AAEA,WAAOZ,YAAY,CAACY,QAAD,CAAZ,CACJU,IADI,CACEC,KAAD,IAAWR,QAAQ,CAACS,QAAQ,CAACD,KAAD,CAAT,CADpB,EAEJD,IAFI,CAEC,MAAMP,QAAQ,CAACU,WAAW,EAAZ,CAFf,CAAP;AAGD,GAPD;AAQD;AAED,OAAO,SAASC,cAAT,CAAyBC,IAAzB,EAA+BC,UAA/B,EAA2C;AAChD,SAAO,CAACb,QAAD,EAAWc,QAAX,KAAwB;AAC7B,UAAM;AAAErB,MAAAA;AAAF,QAAiBqB,QAAQ,EAA/B;AAEAd,IAAAA,QAAQ,CAACe,WAAW,EAAZ,CAAR;AAEA,WAAOC,SAAS,CAAC;AACfJ,MAAAA,IADe;AAEfK,MAAAA,MAAM,EAAExB,UAFO;AAGfoB,MAAAA;AAHe,KAAD,CAAT,CAKJN,IALI,CAKEC,KAAD,IAAWR,QAAQ,CAACS,QAAQ,CAACD,KAAD,CAAT,CALpB,EAMJD,IANI,CAMC,MAAMP,QAAQ,CAACU,WAAW,EAAZ,CANf,CAAP;AAOD,GAZD;AAaD","sourcesContent":["\nimport { saveQuestionAnswer, saveQuestion } from '../utils/api'\n\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\nexport const ADD_RESPONSE = 'ADD_RESPONSE'\nexport const ADD_QUESTION = 'ADD_QUESTION'\n\nexport function receiveQuestions (questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions,\n  }\n}\n\nfunction addResponse ({authedUser, qid, answer}) {\n  return {\n    type: ADD_RESPONSE,\n    authedUser,\n    qid,\n    answer,\n  }\n}\n\nfunction addQuestion (question) {\n  return {\n    type: ADD_QUESTION,\n    question,\n  }\n}\n\nexport function handleResponse (info) {\n  return (dispatch) => {\n\n    dispatch(addResponse(info))\n\n    return saveQuestionAnswer(info)\n      .catch((e) => {\n        console.warn('Error in addResponse:', e)\n        dispatch(addResponse(info))\n        alert('The was an error replying, please try again.')\n      })\n  }\n}\n\n\nexport function handleAddQuestion (question) {\n  return (dispatch) => {\n\n    dispatch(addQuestion(question))\n\n    return saveQuestion(question)\n      .then((tweet) => dispatch(addTweet(tweet)))\n      .then(() => dispatch(hideLoading()))\n  }\n}\n\nexport function handleAddTweet (text, replyingTo) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState()\n\n    dispatch(showLoading())\n\n    return saveTweet({\n      text,\n      author: authedUser,\n      replyingTo\n    })\n      .then((tweet) => dispatch(addTweet(tweet)))\n      .then(() => dispatch(hideLoading()))\n  }\n}"]},"metadata":{},"sourceType":"module"}